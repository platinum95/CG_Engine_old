
//== PROGRAM LINK STATUS = TRUE
//== PROGRAM VALIDATE STATUS = TRUE

//======================================================
//   Vertex Shader 5 
//======================================================

//== SHADER COMPILE STATUS = TRUE
#version 330  

#define SCALE 500

layout (std140) uniform CameraProjectionData
{ 
  mat4 ViewMatrix;
  mat4 ProjectionMatrix;
  mat4 PV_Matrix;
  vec4 CameraPosition;
  vec4 CameraOrientation;
};

layout (std140) uniform LightData
{ 
	vec4 LightPosition;
	vec3 LightColour;
	float Brightness;
};

in vec3 vPosition;
out vec4 ClipspaceCoord;


void main(){
	vec4 vertexPos = vec4(vPosition * SCALE, 1);

	ClipspaceCoord = PV_Matrix * vertexPos;
	gl_Position = ClipspaceCoord;

}
//======================================================
//   Fragment Shader 6 
//======================================================

//== SHADER COMPILE STATUS = TRUE
#version 330

in vec4 ClipspaceCoord;
uniform sampler2D reflectionTexture;
uniform sampler2D refractionTexture;

out vec4 frag_Colour;

void main(){
	vec2 ndc = ClipspaceCoord.xy/ClipspaceCoord.w;
	ndc = vec2((ndc.x + 1.0) / 2.0, (ndc.y + 1.0) / 2.0);

	vec2 reflectionCoord = vec2(ndc.x, -1.0 * ndc.y);
	vec2 refractionCoord = vec2(ndc.x, ndc.y);

	vec4 reflectionColour = texture(reflectionTexture, reflectionCoord);
	vec4 refractionColour = texture(refractionTexture, refractionCoord);

	frag_Colour = mix(reflectionColour, refractionColour, 0.5);
}

